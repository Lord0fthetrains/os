services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: linux-dashboard-backend
    restart: unless-stopped
    ports:
      - "5200:5200"
    environment:
      - NODE_ENV=production
      - PORT=5200
      - FRONTEND_URL=http://localhost:3200
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY:-}
      - NEWS_API_KEY=${NEWS_API_KEY:-}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5200/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: linux-dashboard-frontend
    restart: unless-stopped
    ports:
      - "3200:3000"
    depends_on:
      - backend
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  dashboard-network:
    driver: bridge

volumes:
  dashboard-data:
    driver: local
